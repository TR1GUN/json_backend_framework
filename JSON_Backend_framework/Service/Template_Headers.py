# -------------------------------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------------------------------
# Здесь опишем класс нашего Хедерса - Це важно , в нем будет прописана необходимая информация
# -------------------------------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------------------------------
from JSON_Backend_framework.Service.config import headers


class UM_Headers:
    """
    Это мастер класс Хедерса - который необходим для запроса

    В нем определяется наш протокол
    А так же необходимые данные чтоб пройти авторизацию через NGINX
    """
    # хедерс - Иногда нужен
    _headers = headers
    # Имя хэдера отвечающего за тип проткола - Поддерживаемые значения -int -  40 и 31
    Name_Protocol_USPD = "X-Protocol-USPD"
    # Имя хэдера отвечающего за версию протокола - Поддерживаемые значения - float -
    Name_Protocol_Version = "X-Protocol-Version"

    def __init__(self, UM_Protocol=None, Version=None):
        """
        Здесь модифицируем наш Хедерс, чтоб он соответствовал

        :param UM_Protocol:
        :param Version:
        """
        # Если указан Протокол
        if UM_Protocol:
            self._headers[self.Name_Protocol_USPD] = UM_Protocol
        # Если указана версия протокола
        if Version:
            self._headers[self.Name_Protocol_Version] = Version

    # Метод необходимый чтоб абгрейдить наш Хедерс
    def Update_headers(self, headers:dict):
        """
        Метод необходимый для того чтоб апгрейдить наш хедерс - исправлять поля , добавлять новые

        :param headers: :
        :return:
        """
        self._headers.update(headers)

    # Метод чтоб получить наш Хэдерс что составили
    def Get_headers(self):

        return self._headers
